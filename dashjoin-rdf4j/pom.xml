<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

  <parent>
	<groupId>org.dashjoin</groupId>
	<artifactId>dashjoin-base</artifactId>
	<!--  we feed the actual revision from the CI server -->
	<version>${revision}</version>
  </parent>
	<artifactId>dashjoin-rdf4j</artifactId>
	
	<description>Enables RDF4J graph databases for the dashjoin platform</description>
	<url>https://github.com/dashjoin/platform</url>

	<packaging>jar</packaging>

	<properties>
		<!-- Default for local builds (no revision property passed from the commandline) -->
        <revision>0.0.1-SNAPSHOT</revision>

		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
	</properties>
	
	<dependencies>
	  	<dependency>
	  		<groupId>org.dashjoin</groupId>
	  		<artifactId>dashjoin-core</artifactId>
			<version>${revision}</version>
	  	</dependency>
	
	  	<dependency>
	  		<groupId>org.dashjoin</groupId>
	  		<artifactId>dashjoin-sdk</artifactId>
			<version>${revision}</version>
	  	</dependency>
	
		<dependency>
			<groupId>org.dashjoin</groupId>
			<artifactId>dashjoin-core</artifactId>
			<classifier>tests</classifier>
			<type>test-jar</type>
			<version>${revision}</version>
			<scope>test</scope>
		</dependency>
	
		<!-- dev dependencies -->
		<dependency>
			<groupId>org.junit.jupiter</groupId>
    		<artifactId>junit-jupiter-api</artifactId>
			<scope>test</scope>
		</dependency>
		
		<dependency>
    		<groupId>org.mockito</groupId>
    		<artifactId>mockito-core</artifactId>
    		<scope>test</scope>
		</dependency>

		<!-- https://mvnrepository.com/artifact/org.eclipse.rdf4j/rdf4j-model -->
		<dependency>
		    <groupId>org.eclipse.rdf4j</groupId>
		    <artifactId>rdf4j-runtime</artifactId>
		    <version>4.2.2</version>
		    <type>pom</type>
		</dependency>

		<dependency>
			<groupId>com.inova8</groupId>
			<artifactId>intelligentgraph</artifactId>
			<version>0.9.4</version>
		</dependency>
	</dependencies>
  <build>
    <plugins>
      <plugin>
        <groupId>io.quarkus</groupId>
        <artifactId>quarkus-maven-plugin</artifactId>
        <version>${quarkus.platform.version}</version>
        <executions>
          <execution>
            <goals>
              <goal>build</goal>
              <goal>generate-code</goal>
              <goal>generate-code-tests</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>${compiler-plugin.version}</version>
      </plugin>
      <plugin>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>${surefire-plugin.version}</version>
        <configuration>
          <systemPropertyVariables>
            <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>
            <maven.home>${maven.home}</maven.home>
          </systemPropertyVariables>
        </configuration>
      </plugin>
      
      
      <plugin>
      <groupId>org.jboss.jandex</groupId>
      <artifactId>jandex-maven-plugin</artifactId>
      <version>1.2.3</version>
      <executions>
        <execution>
          <id>make-index</id>
          <goals>
            <goal>jandex</goal>
          </goals>
        </execution>
      </executions>
    </plugin>
    
    
    		<!-- In order to make this POM consumable when installed or published,
			we need to make sure all variables like ${revision} are set to their actual values.
			Note that Eclipse does not know how to handle this plugin, therefore there is
			an exclusion in "lifecycle-mapping" (otherwise it shows an error in Eclipse) -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>flatten-maven-plugin</artifactId>
				<version>1.4.1</version>
				<configuration>
					<updatePomFile>true</updatePomFile>
					<flattenMode>resolveCiFriendliesOnly</flattenMode>
				</configuration>
				<executions>
					<!-- enable flattening -->
					<execution>
						<id>flatten</id>
						<phase>process-resources</phase>
						<goals>
							<goal>flatten</goal>
						</goals>
					</execution>
					<!-- ensure proper cleanup -->
					<execution>
						<id>flatten.clean</id>
						<phase>clean</phase>
						<goals>
							<goal>clean</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			
      <!--plugin>
      	<groupId>io.quarkus</groupId>
      	<artifactId>quarkus-maven-plugin</artifactId>
      </plugin>
      <plugin>
      	<groupId>io.quarkus</groupId>
      	<artifactId>quarkus-maven-plugin</artifactId>
      </plugin -->

      
    </plugins>
    <pluginManagement>
    	<plugins>
    		<!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself.-->
    		<plugin>
    			<groupId>org.eclipse.m2e</groupId>
    			<artifactId>lifecycle-mapping</artifactId>
    			<version>1.0.0</version>
    			<configuration>
    				<lifecycleMappingMetadata>
    					<pluginExecutions>
    						<pluginExecution>
    							<pluginExecutionFilter>
    								<groupId>io.quarkus</groupId>
    								<artifactId>
    									quarkus-maven-plugin
    								</artifactId>
    								<versionRange>
    									[1.9.1.Final,)
    								</versionRange>
    								<goals>
    									<goal>generate-code-tests</goal>
    									<goal>generate-code</goal>
    								</goals>
    							</pluginExecutionFilter>
    							<action>
    								<ignore></ignore>
    							</action>
    						</pluginExecution>
    						<pluginExecution>
    							<pluginExecutionFilter>
    								<groupId>org.jboss.jandex</groupId>
    								<artifactId>
    									jandex-maven-plugin
    								</artifactId>
    								<versionRange>
    									[1.0.7,)
    								</versionRange>
    								<goals>
    									<goal>jandex</goal>
    								</goals>
    							</pluginExecutionFilter>
    							<action>
    								<ignore></ignore>
    							</action>
    						</pluginExecution>
    					</pluginExecutions>
    				</lifecycleMappingMetadata>
    			</configuration>
    		</plugin>
    	</plugins>
    </pluginManagement>
  </build>
  <profiles>
    <profile>
      <id>native</id>
      <activation>
        <property>
          <name>native</name>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <artifactId>maven-failsafe-plugin</artifactId>
            <version>${surefire-plugin.version}</version>
            <executions>
              <execution>
                <goals>
                  <goal>integration-test</goal>
                  <goal>verify</goal>
                </goals>
                <configuration>
                  <systemPropertyVariables>
                    <native.image.path>${project.build.directory}/${project.build.finalName}-runner</native.image.path>
                    <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>
                    <maven.home>${maven.home}</maven.home>
                  </systemPropertyVariables>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
      <properties>
        <quarkus.package.type>native</quarkus.package.type>
      </properties>
    </profile>
  </profiles>
</project>
