{
	"dj-database": [
		{
			"title": "database definition",
			"description": "postgres database connection information with encrypted password",
			"file": "model/dj-database/dj%2Fpostgres.json",
			"code": {
				"name": "postgres",
				"djClassName": "org.dashjoin.service.SQLDatabase",
				"username": "postgres",
				"url": "jdbc:postgresql://localhost:5432/postgres",
				"ID": "dj/postgres",
				"password": "DJ1#\b/gbzX8DDZa1lVaiLat0HdX9cDST2KHJk"
			}
		},
		{
			"title": "database definition with audit log",
			"description": "sqlite database definition. The before-update trigger is called accordingly and logs an audit record to the table audit",
			"code": {
				"name": "sqlite",
				"ID": "dj/sqlite",
				"djClassName": "org.dashjoin.service.SQLDatabase",
				"url": "jdbc:sqlite:dashjoin-demo.db",
				"tables": {
					"REQUESTS": {
						"before-update": "$create('db', 'audit', {'timestamp': $now(), 'user': user, 'operation': command, 'payload': object})"
					}
				}
			}
		},
		{
			"title": "database definition with initial create table",
			"description": "sqlite database definition with init script that contains: CREATE TABLE IF NOT EXISTS MY_TABLE(ID INT PRIMARY KEY, NAME VARCHAR(255))",
			"code": {
				"name": "sqlite",
				"ID": "dj/sqlite",
				"djClassName": "org.dashjoin.service.SQLDatabase",
				"url": "jdbc:sqlite:dashjoin-demo.db",
				"initScripts": [
					"upload/init.sql"
				]
			}
		},
		{
			"title": "database definition with foreign key",
			"description": "sqlite database definition with a foreign key pointing to the CUSTOMERS table in the northwind database",
			"code": {
				"name": "sqlite",
				"ID": "dj/sqlite",
				"djClassName": "org.dashjoin.service.SQLDatabase",
				"url": "jdbc:sqlite:dashjoin-demo.db",
				"tables": {
					"REQUESTS": {
						"properties": {
							"customer": {
								"ref": "dj/northwind/CUSTOMERS/CUSTOMER_ID",
								"displayWith": "fk"
							}
						}
					}
				}
			}
		},
		{
			"title": "database definition with foreign key array",
			"description": "postgres database definition with an array of foreign keys pointing to the CUSTOMERS table in the northwind database",
			"code": {
				"name": "postgres",
				"djClassName": "org.dashjoin.service.SQLDatabase",
				"username": "postgres",
				"password": "DJ1#\bApQHRIfZwu6WSIJrlI2aBqbMhnLRPlsg",
				"url": "jdbc:postgresql://localhost:5432/postgres",
				"ID": "dj/postgres",
				"tables": {
					"test": {
						"properties": {
							"arr": {
								"type": "array",
								"items": {
									"ref": "dj/northwind/CUSTOMERS/CUSTOMER_ID",
									"type": "string",
									"displayWith": "fk"
								}
							}
						}
					}
				}
			}
		},
		{
			"title": "database definition with record label",
			"description": "EMPLOYEES table defines the record label to be the LAST_NAME. All links and page titles for EMPLOYEE records use the LAST_NAME column as labels",
			"code": {
				"ID": "dj/northwind",
				"name": "northwind",
				"parent": "dj",
				"djClassName": "org.dashjoin.service.SQLDatabase",
				"url": "jdbc:h2:mem:northwind",
				"tables": {
					"EMPLOYEES": {
						"dj-label": "${LAST_NAME}"
					}
				}
			}
		}
	],
	"dj-function": [
		{
			"title": "Function catalog: Invoke",
			"description": "Function that adds two numbers passed in the argument object. It can be called via $call('add') or via REST",
			"file": "model/dj-function/add.json",
			"code": {
				"ID": "add",
				"djClassName": "org.dashjoin.function.Invoke",
				"expression": "{'result': x+y}",
				"roles": [
					"authenticated"
				],
				"type": "read"
			}
		},
		{
			"title": "Function catalog: RestJson",
			"description": "Function that calls a web service. The fields of the function argument are used to construct the URL via from string template",
			"file": "model/dj-function/address.json",
			"code": {
				"djClassName": "org.dashjoin.function.RestJson",
				"url": "https://api.geoapify.com/v1/geocode/search?street=${street}&postcode=${postcode}&city=${city}&country=${country}&apiKey=...",
				"method": "GET",
				"contentType": "application/json",
				"ID": "address"
			}
		},
		{
			"title": "Function catalog: Credentials",
			"description": "Encrypted credentials for OpenAI to be used in $curl and $chat functions",
			"file": "model/dj-function/openai.json",
			"code": {
				"ID": "openai",
				"djClassName": "org.dashjoin.function.Credentials",
				"username": "Authorization",
				"password": "DJ1#\b7Zw3EGtmVKaDuwwOtwXfWDG1y+awbon7WNQp9NmJ6EgUXEpYUMC8O7zRUw2kSnDxyATO0R3ke3NxjaT9zCwYyDGS5VDgYt/L",
				"apiKey": true
			}
		},
		{
			"title": "Function catalog: ETL",
			"description": "Extract load transform function. Loads the result of 'expression' into the database sqlite. The data is mapped using 'mappings'",
			"file": "model/dj-function/misp.json",
			"code": {
				"djClassName": "com.dashjoin.function.ETL",
				"database": "sqlite",
				"ID": "misp",
				"type": "write",
				"oldData": "Delete All",
				"createSchema": true,
				"mappings": {
					"MISP_Event": {
						"sourceTable": "table",
						"extractColumn": null,
						"extractKey": null,
						"pk": "uuid",
						"rowMapping": null,
						"rowFilter": null
					}
				},
				"expressions": {
					"expression": "$openJson(\"https://www.circl.lu/doc/misp/feed-osint/0b988513-9535-42f0-9ebc-5d6aec2e1c79.json\").Event.Attribute"
				}
			}
		},
		{
			"title": "Function catalog: Email",
			"description": "Configures an SMTP server",
			"file": "model/dj-function/email.json",
			"code": {
				"djClassName": "org.dashjoin.function.Email",
				"ID": "email",
				"type": "write",
				"properties": {
					"mail.smtp.port": "25"
				},
				"username": "user",
				"password": "DJ1#\btW06MCaBJjnRvgvGgTaTpQ=="
			}
		}
	],
	"logincfg": [
		{
			"title": "login configuration",
			"description": "Login configuration for ACME Corp. App with a specific login screen background image. Users can choose between the 'de' and 'en' locales. The default is the browser locale.",
			"file": "assets/logincfg.json",
			"code": {
				"signInTabText": "ACME Corp. App",
				"defaultLocale": "browser",
				"locales": [
					"en",
					"de"
				],
				"backgroundImage": "https://example.org/logo.jpg"
			}
		}
	],
	"theme": [
		{
			"description": "sets the UI theme. in this example, we set the primary and secondary color",
			"file": "model/dj-config/theme.json",
			"code": {
				"ID": "theme",
				"map": {
					"palette.primary.main": "#3d7dbc",
					"palette.secondary.main": "#3d7dbc"
				}
			}
		}
	],
	"dark-theme": [
		{
			"description": "sets the UI dark theme. in this example, we set the primary and secondary color",
			"file": "model/dj-config/dark-theme.json",
			"code": {
				"ID": "theme",
				"map": {
					"palette.primary.main": "#3d7dbc",
					"palette.secondary.main": "#3d7dbc"
				}
			}
		}
	],
	"sidenav-width-px": [
		{
			"description": "sets the sidenav width to 100px. 0 hides the sidenav",
			"file": "model/dj-config/sidenav-width-px.json",
			"code": {
				"ID": "authenticated",
				"properties": {
					"sidenav-width-px": "100"
				}
			}
		}
	],
	"sidenav-open": [
		{
			"description": "sidenav is closed by default",
			"file": "model/dj-config/sidenav-open.json",
			"code": {
				"ID": "sidenav-open",
				"boolean": false
			}
		}
	],
	"search-timeout-ms": [
		{
			"description": "Query timeout in milliseconds for queries issued when searching data. To disable the timeout, set to 0",
			"file": "model/dj-config/search-timeout-ms.json",
			"code": {
				"ID": "search-timeout-ms",
				"integer": 200
			}
		}
	],
	"prioritize-table-in-search": [
		{
			"description": "Tables in this list are searched first",
			"file": "model/dj-config/prioritize-table-in-search.json",
			"code": {
				"ID": "prioritize-table-in-search",
				"list": [
					"EMPLOYEES"
				]
			}
		}
	],
	"on-start": [
		{
			"description": "Expression to run when the system starts. Can be used to initialize the database, etc...",
			"file": "model/dj-config/on-start.json",
			"code": {
				"ID": "on-start",
				"string": "$log('starting...')"
			}
		}
	],
	"on-login": [
		{
			"description": "Expression run whenever a user logs in. In this example, only allow the admin user to login",
			"file": "model/dj-config/on-login.json",
			"code": {
				"ID": "on-login",
				"string": "email != 'admin@localhost' ? $error('Only user admin allowed')"
			}
		}
	],
	"logo-url": [
		{
			"description": "specifies the logo to show in the toolbar",
			"file": "model/dj-config/logo-url.json",
			"code": {
				"ID": "logo-url",
				"string": "/assets/logo.svg"
			}
		}
	],
	"include-table-in-search": [
		{
			"description": "Only search the EMPLOYEES table",
			"file": "model/dj-config/include-table-in-search.json",
			"code": {
				"ID": "include-table-in-search",
				"list": [
					"EMPLOYEES"
				]
			}
		}
	],
	"homepage": [
		{
			"description": "Page to open after the user logs in",
			"file": "model/dj-config/homepage.json",
			"code": {
				"ID": "homepage",
				"string": "/page/Info"
			}
		}
	],
	"exclude-table-from-search": [
		{
			"description": "Do not search the EMPLOYEES tables",
			"file": "model/dj-config/exclude-table-from-search.json",
			"code": {
				"ID": "exclude-table-from-search",
				"list": [
					"EMPLOYEES"
				]
			}
		}
	],
	"exclude-database-from-search": [
		{
			"description": "do not search the sqlite database",
			"file": "model/dj-config/exclude-database-from-search.json",
			"code": {
				"ID": "exclude-database-from-search",
				"list": [
					"sqlite"
				]
			}
		}
	],
	"i18n": [
		{
			"description": "Specify german translations for strings appearing in the app",
			"file": "model/dj-config/de.json",
			"code": {
				"ID": "de",
				"map": {
					"Search Results": "Suchergebnisse"
				}
			}
		}
	],
	"database-search-query": [
		{
			"description": "Configures searches on the northwind DB to use the query 'search' from the query catalog (select * from EMPLOYEES where LAST_NAME like CONCAT(${search}, '%'))",
			"file": "model/dj-config/database-search-query.json",
			"code": {
				"ID": "database-search-query",
				"map": {
					"northwind": "search"
				}
			}
		}
	],
	"allow-dark-mode": [
		{
			"description": "disallow dark mode",
			"file": "model/dj-config/allow-dark-mode.json",
			"code": {
				"ID": "allow-dark-mode",
				"boolean": false
			}
		}
	],
	"autocomplete-timeout-ms": [
		{
			"description": "sets the timeout for autocomplete queries to 1 second",
			"file": "model/dj-config/autocomplete-timeout-ms.json",
			"code": {
				"ID": "autocomplete-timeout-ms",
				"integer": 1000
			}
		}
	],
	"all-timeout-ms": [
		{
			"description": "Query timeout in milliseconds for queries issued when browsing data. To disable the timeout, set to 0.",
			"file": "model/dj-config/all-timeout-ms.json",
			"code": {
				"ID": "all-timeout-ms",
				"integer": 1000
			}
		}
	],
	"tenantusers": [
		{
			"description": "user@example.org is allowed (active) on the platform and is in the role 'authenticated'",
			"file": "model/tenantusers/user%40example.org.json",
			"code": {
				"ID": "user@example.org",
				"active": true,
				"roles": [
					"authenticated"
				]
			}
		},
		{
			"description": "Sets the 'homepage' variable (the initial page after login) to '/page/test' for user@example.org (overrides the global and role setting for 'homepage')",
			"file": "model/tenantusers/user%40example.org.json",
			"code": {
				"ID": "user@example.org",
				"properties": {
					"homepage": "/page/test"
				}
			}
		}
	],
	"dj-role": [
		{
			"description": "defines the role 'admin'. Sets the 'homepage' variable (the initial page after login) is set to '/page/Info' for all users in this role (overrides the global setting 'homepage')",
			"file": "model/dj-role/admin.json",
			"code": {
				"ID": "admin",
				"properties": {
					"homepage": "/page/Info"
				}
			}
		}
	]
}